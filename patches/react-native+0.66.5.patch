diff --git a/node_modules/react-native/React/CoreModules/RCTAlertController.h b/node_modules/react-native/React/CoreModules/RCTAlertController.h
index f5c206c..a784750 100644
--- a/node_modules/react-native/React/CoreModules/RCTAlertController.h
+++ b/node_modules/react-native/React/CoreModules/RCTAlertController.h
@@ -10,6 +10,5 @@
 @interface RCTAlertController : UIAlertController
 
 - (void)show:(BOOL)animated completion:(void (^)(void))completion;
-- (void)hide;
 
 @end
diff --git a/node_modules/react-native/React/CoreModules/RCTAlertController.m b/node_modules/react-native/React/CoreModules/RCTAlertController.m
index 8cd0bab..ce45926 100644
--- a/node_modules/react-native/React/CoreModules/RCTAlertController.m
+++ b/node_modules/react-native/React/CoreModules/RCTAlertController.m
@@ -9,33 +9,11 @@
 
 #import "RCTAlertController.h"
 
-@interface RCTAlertController ()
-
-@property (nonatomic, strong) UIWindow *alertWindow;
-
-@end
-
 @implementation RCTAlertController
 
-- (UIWindow *)alertWindow
-{
-  if (_alertWindow == nil) {
-    _alertWindow = [[UIWindow alloc] initWithFrame:RCTSharedApplication().keyWindow.bounds];
-    _alertWindow.rootViewController = [UIViewController new];
-    _alertWindow.windowLevel = UIWindowLevelAlert + 1;
-  }
-  return _alertWindow;
-}
-
 - (void)show:(BOOL)animated completion:(void (^)(void))completion
 {
-  [self.alertWindow makeKeyAndVisible];
-  [self.alertWindow.rootViewController presentViewController:self animated:animated completion:completion];
-}
-
-- (void)hide
-{
-  _alertWindow = nil;
+    [[RCTKeyWindow() rootViewController] presentViewController:self animated:animated completion:completion];
 }
 
 @end
diff --git a/node_modules/react-native/React/CoreModules/RCTAlertManager.mm b/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
index e0f450e..425951e 100644
--- a/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
+++ b/node_modules/react-native/React/CoreModules/RCTAlertManager.mm
@@ -161,7 +161,6 @@ - (void)invalidate
                                   case RCTAlertViewStylePlainTextInput:
                                   case RCTAlertViewStyleSecureTextInput:
                                     callback(@[ buttonKey, [weakAlertController.textFields.firstObject text] ]);
-                                    [weakAlertController hide];
                                     break;
                                   case RCTAlertViewStyleLoginAndPasswordInput: {
                                     NSDictionary<NSString *, NSString *> *loginCredentials = @{
@@ -169,12 +168,10 @@ - (void)invalidate
                                       @"password" : [weakAlertController.textFields.lastObject text]
                                     };
                                     callback(@[ buttonKey, loginCredentials ]);
-                                    [weakAlertController hide];
                                     break;
                                   }
                                   case RCTAlertViewStyleDefault:
                                     callback(@[ buttonKey ]);
-                                    [weakAlertController hide];
                                     break;
                                 }
                               }]];
diff --git a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
index 2c68674..8bfe02e 100644
--- a/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
+++ b/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.cpp
@@ -2229,7 +2229,7 @@ static float YGDistributeFreeSpaceSecondPass(
         depth,
         generationCount);
     node->setLayoutHadOverflow(
-        node->getLayout().hadOverflow() |
+        node->getLayout().hadOverflow() ||
         currentRelativeChild->getLayout().hadOverflow());
   }
   return deltaFreeSpace;
@@ -3005,7 +3005,7 @@ static void YGNodelayoutImpl(
     }
 
     node->setLayoutHadOverflow(
-        node->getLayout().hadOverflow() |
+        node->getLayout().hadOverflow() ||
         (collectedFlexItemsValues.remainingFreeSpace < 0));
 
     // STEP 6: MAIN-AXIS JUSTIFICATION & CROSS-AXIS SIZE DETERMINATION
@@ -4190,13 +4190,13 @@ YOGA_EXPORT void YGNodeCalculateLayoutWithContext(
         node->getLayout().direction(), ownerWidth, ownerHeight, ownerWidth);
     YGRoundToPixelGrid(node, node->getConfig()->pointScaleFactor, 0.0f, 0.0f);
 
-#ifdef DEBUG
-    if (node->getConfig()->printTree) {
-      YGNodePrint(
-          node,
-          (YGPrintOptions) (YGPrintOptionsLayout | YGPrintOptionsChildren | YGPrintOptionsStyle));
-    }
-#endif
+// #ifdef DEBUG
+//     if (node->getConfig()->printTree) {
+//       YGNodePrint(
+//           node,
+//           (YGPrintOptions) (YGPrintOptionsLayout | YGPrintOptionsChildren | YGPrintOptionsStyle));
+//     }
+// #endif
   }
 
   Event::publish<Event::LayoutPassEnd>(node, {layoutContext, &markerData});
@@ -4250,13 +4250,13 @@ YOGA_EXPORT void YGNodeCalculateLayoutWithContext(
           !nodeWithoutLegacyFlag->isLayoutTreeEqualToNode(*node);
       node->setLayoutDoesLegacyFlagAffectsLayout(neededLegacyStretchBehaviour);
 
-#ifdef DEBUG
-      if (nodeWithoutLegacyFlag->getConfig()->printTree) {
-        YGNodePrint(
-            nodeWithoutLegacyFlag,
-            (YGPrintOptions) (YGPrintOptionsLayout | YGPrintOptionsChildren | YGPrintOptionsStyle));
-      }
-#endif
+// #ifdef DEBUG
+//       if (nodeWithoutLegacyFlag->getConfig()->printTree) {
+//         YGNodePrint(
+//             nodeWithoutLegacyFlag,
+//             (YGPrintOptions) (YGPrintOptionsLayout | YGPrintOptionsChildren | YGPrintOptionsStyle));
+//       }
+// #endif
     }
     YGConfigFreeRecursive(nodeWithoutLegacyFlag);
     YGNodeFreeRecursive(nodeWithoutLegacyFlag);
